

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Dec 17 15:48:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _TRISBbits	set	3987
    52   000000                     _TRISCbits	set	3988
    53   000000                     _LATD	set	3980
    54   000000                     _TRISAbits	set	3986
    55   000000                     _TRISD	set	3989
    56   000000                     _ADCON1	set	4033
    57   000000                     _SSPCON1bits	set	4038
    58   000000                     _SSPSTATbits	set	4039
    59   000000                     _SSPBUF	set	4041
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64   007F3E                     __pcinit:
    65                           	callstack 0
    66   007F3E                     start_initialization:
    67                           	callstack 0
    68   007F3E                     __initialization:
    69                           	callstack 0
    70                           
    71                           ; Clear objects allocated to COMRAM (1 bytes)
    72   007F3E  6A07               	clrf	__pbssCOMRAM& (0+255),c
    73   007F40                     end_of_initialization:
    74                           	callstack 0
    75   007F40                     __end_of__initialization:
    76                           	callstack 0
    77   007F40  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78   007F42  6EF8               	movwf	tblptru,c
    79   007F44  0100               	movlb	0
    80   007F46  EFA5  F03F         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	bssCOMRAM
    83   000007                     __pbssCOMRAM:
    84                           	callstack 0
    85   000007                     _dato:
    86                           	callstack 0
    87   000007                     	ds	1
    88                           
    89                           	psect	cstackCOMRAM
    90   000001                     __pcstackCOMRAM:
    91                           	callstack 0
    92   000001                     SPI_Slave_Init@Forma:
    93                           	callstack 0
    94                           
    95                           ; 1 bytes @ 0x0
    96   000001                     	ds	1
    97   000002                     ??_SPI_Slave_Init:
    98                           
    99                           ; 1 bytes @ 0x1
   100   000002                     	ds	2
   101   000004                     SPI_Slave_Init@MS_CLK_SS:
   102                           	callstack 0
   103                           
   104                           ; 1 bytes @ 0x3
   105   000004                     	ds	1
   106   000005                     ??_main:
   107                           
   108                           ; 1 bytes @ 0x4
   109   000005                     	ds	2
   110                           
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 8 in file "main.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, status,0, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   130 ;;      Params:         0       0       0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0       0       0
   132 ;;      Temps:          2       0       0       0       0       0       0       0       0
   133 ;;      Totals:         2       0       0       0       0       0       0       0       0
   134 ;;Total ram usage:        2 bytes
   135 ;; Hardware stack levels required when called: 1
   136 ;; This function calls:
   137 ;;		_SPI_Rx
   138 ;;		_SPI_Slave_Init
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145   007F4A                     __ptext0:
   146                           	callstack 0
   147   007F4A                     _main:
   148                           	callstack 30
   149   007F4A                     
   150                           ;main.c: 9:     ADCON1 = 0x0F;
   151   007F4A  0E0F               	movlw	15
   152   007F4C  6EC1               	movwf	193,c	;volatile
   153                           
   154                           ;main.c: 10:     TRISD = 0x00;
   155   007F4E  0E00               	movlw	0
   156   007F50  6E95               	movwf	149,c	;volatile
   157                           
   158                           ;main.c: 11:     LATD = 0x00;
   159   007F52  0E00               	movlw	0
   160   007F54  6E8C               	movwf	140,c	;volatile
   161   007F56                     
   162                           ;main.c: 12:     SPI_Slave_Init(4, 0);
   163   007F56  0E00               	movlw	0
   164   007F58  6E01               	movwf	SPI_Slave_Init@Forma^0,c
   165   007F5A  0E04               	movlw	4
   166   007F5C  ECC4  F03F         	call	_SPI_Slave_Init
   167   007F60                     l800:
   168                           
   169                           ;main.c: 15:         dato = SPI_Rx();
   170   007F60  EC9D  F03F         	call	_SPI_Rx	;wreg free
   171   007F64  6E07               	movwf	_dato^0,c
   172   007F66                     
   173                           ;main.c: 16:         LATD = dato;
   174   007F66  C007  FF8C         	movff	_dato,3980	;volatile
   175   007F6A                     
   176                           ;main.c: 17:         _delay((unsigned long)((100)*(20000000L/4000.0)));
   177   007F6A  0E03               	movlw	3
   178   007F6C  6E06               	movwf	(??_main+1)^0,c
   179   007F6E  0E8A               	movlw	138
   180   007F70  6E05               	movwf	??_main^0,c
   181   007F72  0E56               	movlw	86
   182   007F74                     u17:
   183   007F74  2EE8               	decfsz	wreg,f,c
   184   007F76  D7FE               	bra	u17
   185   007F78  2E05               	decfsz	??_main^0,f,c
   186   007F7A  D7FC               	bra	u17
   187   007F7C  2E06               	decfsz	(??_main+1)^0,f,c
   188   007F7E  D7FA               	bra	u17
   189   007F80  EFB0  F03F         	goto	l800
   190   007F84  EF00  F000         	goto	start
   191   007F88                     __end_of_main:
   192                           	callstack 0
   193                           
   194 ;; *************** function _SPI_Slave_Init *****************
   195 ;; Defined at:
   196 ;;		line 34 in file "SPI_LIB.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;  MS_CLK_SS       1    wreg     unsigned char 
   199 ;;  Forma           1    0[COMRAM] unsigned char 
   200 ;; Auto vars:     Size  Location     Type
   201 ;;  MS_CLK_SS       1    3[COMRAM] unsigned char 
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      void 
   204 ;; Registers used:
   205 ;;		wreg, status,2, status,0
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   211 ;;      Params:         1       0       0       0       0       0       0       0       0
   212 ;;      Locals:         1       0       0       0       0       0       0       0       0
   213 ;;      Temps:          2       0       0       0       0       0       0       0       0
   214 ;;      Totals:         4       0       0       0       0       0       0       0       0
   215 ;;Total ram usage:        4 bytes
   216 ;; Hardware stack levels used: 1
   217 ;; This function calls:
   218 ;;		Nothing
   219 ;; This function is called by:
   220 ;;		_main
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text1
   225   007F88                     __ptext1:
   226                           	callstack 0
   227   007F88                     _SPI_Slave_Init:
   228                           	callstack 30
   229                           
   230                           ;incstack = 0
   231                           ;SPI_Slave_Init@MS_CLK_SS stored from wreg
   232   007F88  6E04               	movwf	SPI_Slave_Init@MS_CLK_SS^0,c
   233   007F8A                     
   234                           ;SPI_LIB.c: 37:     TRISAbits.RA5 = 1;
   235   007F8A  8A92               	bsf	146,5,c	;volatile
   236                           
   237                           ;SPI_LIB.c: 38:     TRISCbits.RC7 = 0;
   238   007F8C  9E94               	bcf	148,7,c	;volatile
   239                           
   240                           ;SPI_LIB.c: 39:     TRISBbits.RB0 = 1;
   241   007F8E  8093               	bsf	147,0,c	;volatile
   242                           
   243                           ;SPI_LIB.c: 40:     TRISBbits.RB1 = 1;
   244   007F90  8293               	bsf	147,1,c	;volatile
   245                           
   246                           ;SPI_LIB.c: 42:     switch(Forma){
   247   007F92  EFDB  F03F         	goto	l786
   248   007F96                     l25:
   249   007F96  9CC7               	bcf	199,6,c	;volatile
   250                           
   251                           ;SPI_LIB.c: 44:                    SSPCON1bits.CKP=0;
   252   007F98  98C6               	bcf	198,4,c	;volatile
   253                           
   254                           ;SPI_LIB.c: 45:                    break;
   255   007F9A  EFF8  F03F         	goto	l26
   256   007F9E                     l27:
   257   007F9E  9CC7               	bcf	199,6,c	;volatile
   258                           
   259                           ;SPI_LIB.c: 47:                    SSPCON1bits.CKP=1;
   260   007FA0  88C6               	bsf	198,4,c	;volatile
   261                           
   262                           ;SPI_LIB.c: 48:                    break;
   263   007FA2  EFF8  F03F         	goto	l26
   264   007FA6                     l28:
   265   007FA6  8CC7               	bsf	199,6,c	;volatile
   266                           
   267                           ;SPI_LIB.c: 50:                    SSPCON1bits.CKP=0;
   268   007FA8  98C6               	bcf	198,4,c	;volatile
   269                           
   270                           ;SPI_LIB.c: 51:                    break;
   271   007FAA  EFF8  F03F         	goto	l26
   272   007FAE                     l29:
   273   007FAE  8CC7               	bsf	199,6,c	;volatile
   274                           
   275                           ;SPI_LIB.c: 53:                    SSPCON1bits.CKP=1;
   276   007FB0  88C6               	bsf	198,4,c	;volatile
   277                           
   278                           ;SPI_LIB.c: 54:                    break;
   279   007FB2  EFF8  F03F         	goto	l26
   280   007FB6                     l786:
   281   007FB6  5001               	movf	SPI_Slave_Init@Forma^0,w,c
   282   007FB8  6E02               	movwf	??_SPI_Slave_Init^0,c
   283   007FBA  6A03               	clrf	(??_SPI_Slave_Init+1)^0,c
   284                           
   285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   286                           ; Switch size 1, requested type "simple"
   287                           ; Number of cases is 1, Range of values is 0 to 0
   288                           ; switch strategies available:
   289                           ; Name         Instructions Cycles
   290                           ; simple_byte            4     3 (average)
   291                           ;	Chosen strategy is simple_byte
   292   007FBC  5003               	movf	(??_SPI_Slave_Init+1)^0,w,c
   293   007FBE  0A00               	xorlw	0	; case 0
   294   007FC0  B4D8               	btfsc	status,2,c
   295   007FC2  EFE5  F03F         	goto	l810
   296   007FC6  EFF8  F03F         	goto	l26
   297   007FCA                     l810:
   298                           
   299                           ; Switch size 1, requested type "simple"
   300                           ; Number of cases is 4, Range of values is 0 to 3
   301                           ; switch strategies available:
   302                           ; Name         Instructions Cycles
   303                           ; simple_byte           13     7 (average)
   304                           ;	Chosen strategy is simple_byte
   305   007FCA  5002               	movf	??_SPI_Slave_Init^0,w,c
   306   007FCC  0A00               	xorlw	0	; case 0
   307   007FCE  B4D8               	btfsc	status,2,c
   308   007FD0  EFCB  F03F         	goto	l25
   309   007FD4  0A01               	xorlw	1	; case 1
   310   007FD6  B4D8               	btfsc	status,2,c
   311   007FD8  EFCF  F03F         	goto	l27
   312   007FDC  0A03               	xorlw	3	; case 2
   313   007FDE  B4D8               	btfsc	status,2,c
   314   007FE0  EFD3  F03F         	goto	l28
   315   007FE4  0A01               	xorlw	1	; case 3
   316   007FE6  B4D8               	btfsc	status,2,c
   317   007FE8  EFD7  F03F         	goto	l29
   318   007FEC  EFF8  F03F         	goto	l26
   319   007FF0                     l26:
   320                           
   321                           ;SPI_LIB.c: 57:     SSPSTATbits.SMP = 0;
   322   007FF0  9EC7               	bcf	199,7,c	;volatile
   323   007FF2                     
   324                           ;SPI_LIB.c: 58:     SSPCON1bits.SSPM = MS_CLK_SS;
   325   007FF2  50C6               	movf	198,w,c	;volatile
   326   007FF4  1804               	xorwf	SPI_Slave_Init@MS_CLK_SS^0,w,c
   327   007FF6  0BF0               	andlw	-16
   328   007FF8  1804               	xorwf	SPI_Slave_Init@MS_CLK_SS^0,w,c
   329   007FFA  6EC6               	movwf	198,c	;volatile
   330   007FFC                     
   331                           ;SPI_LIB.c: 59:     SSPCON1bits.SSPEN = 1;
   332   007FFC  8AC6               	bsf	198,5,c	;volatile
   333   007FFE  0012               	return		;funcret
   334   008000                     __end_of_SPI_Slave_Init:
   335                           	callstack 0
   336                           
   337 ;; *************** function _SPI_Rx *****************
   338 ;; Defined at:
   339 ;;		line 68 in file "SPI_LIB.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      unsigned char 
   346 ;; Registers used:
   347 ;;		wreg, status,2
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   353 ;;      Params:         0       0       0       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels used: 1
   359 ;; This function calls:
   360 ;;		Nothing
   361 ;; This function is called by:
   362 ;;		_main
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text2
   367   007F3A                     __ptext2:
   368                           	callstack 0
   369   007F3A                     _SPI_Rx:
   370                           	callstack 30
   371   007F3A                     
   372                           ;SPI_LIB.c: 70:     return SSPBUF;
   373   007F3A  50C9               	movf	201,w,c	;volatile
   374   007F3C  0012               	return		;funcret
   375   007F3E                     __end_of_SPI_Rx:
   376                           	callstack 0
   377   000000                     
   378                           	psect	rparam
   379   000000                     
   380                           	psect	idloc
   381                           
   382                           ;Config register IDLOC0 @ 0x200000
   383                           ;	unspecified, using default values
   384   200000                     	org	2097152
   385   200000  FF                 	db	255
   386                           
   387                           ;Config register IDLOC1 @ 0x200001
   388                           ;	unspecified, using default values
   389   200001                     	org	2097153
   390   200001  FF                 	db	255
   391                           
   392                           ;Config register IDLOC2 @ 0x200002
   393                           ;	unspecified, using default values
   394   200002                     	org	2097154
   395   200002  FF                 	db	255
   396                           
   397                           ;Config register IDLOC3 @ 0x200003
   398                           ;	unspecified, using default values
   399   200003                     	org	2097155
   400   200003  FF                 	db	255
   401                           
   402                           ;Config register IDLOC4 @ 0x200004
   403                           ;	unspecified, using default values
   404   200004                     	org	2097156
   405   200004  FF                 	db	255
   406                           
   407                           ;Config register IDLOC5 @ 0x200005
   408                           ;	unspecified, using default values
   409   200005                     	org	2097157
   410   200005  FF                 	db	255
   411                           
   412                           ;Config register IDLOC6 @ 0x200006
   413                           ;	unspecified, using default values
   414   200006                     	org	2097158
   415   200006  FF                 	db	255
   416                           
   417                           ;Config register IDLOC7 @ 0x200007
   418                           ;	unspecified, using default values
   419   200007                     	org	2097159
   420   200007  FF                 	db	255
   421                           
   422                           	psect	config
   423                           
   424                           ;Config register CONFIG1L @ 0x300000
   425                           ;	PLL Prescaler Selection bits
   426                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   427                           ;	System Clock Postscaler Selection bits
   428                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   429                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   430                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   431   300000                     	org	3145728
   432   300000  00                 	db	0
   433                           
   434                           ;Config register CONFIG1H @ 0x300001
   435                           ;	Oscillator Selection bits
   436                           ;	FOSC = HS, HS oscillator (HS)
   437                           ;	Fail-Safe Clock Monitor Enable bit
   438                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   439                           ;	Internal/External Oscillator Switchover bit
   440                           ;	IESO = OFF, Oscillator Switchover mode disabled
   441   300001                     	org	3145729
   442   300001  0C                 	db	12
   443                           
   444                           ;Config register CONFIG2L @ 0x300002
   445                           ;	Power-up Timer Enable bit
   446                           ;	PWRT = OFF, PWRT disabled
   447                           ;	Brown-out Reset Enable bits
   448                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   449                           ;	Brown-out Reset Voltage bits
   450                           ;	BORV = 3, Minimum setting 2.05V
   451                           ;	USB Voltage Regulator Enable bit
   452                           ;	VREGEN = OFF, USB voltage regulator disabled
   453   300002                     	org	3145730
   454   300002  19                 	db	25
   455                           
   456                           ;Config register CONFIG2H @ 0x300003
   457                           ;	Watchdog Timer Enable bit
   458                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   459                           ;	Watchdog Timer Postscale Select bits
   460                           ;	WDTPS = 32768, 1:32768
   461   300003                     	org	3145731
   462   300003  1E                 	db	30
   463                           
   464                           ; Padding undefined space
   465   300004                     	org	3145732
   466   300004  FF                 	db	255
   467                           
   468                           ;Config register CONFIG3H @ 0x300005
   469                           ;	CCP2 MUX bit
   470                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   471                           ;	PORTB A/D Enable bit
   472                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   473                           ;	Low-Power Timer 1 Oscillator Enable bit
   474                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   475                           ;	MCLR Pin Enable bit
   476                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   477   300005                     	org	3145733
   478   300005  81                 	db	129
   479                           
   480                           ;Config register CONFIG4L @ 0x300006
   481                           ;	Stack Full/Underflow Reset Enable bit
   482                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   483                           ;	Single-Supply ICSP Enable bit
   484                           ;	LVP = OFF, Single-Supply ICSP disabled
   485                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   486                           ;	ICPRT = OFF, ICPORT disabled
   487                           ;	Extended Instruction Set Enable bit
   488                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   489                           ;	Background Debugger Enable bit
   490                           ;	DEBUG = 0x1, unprogrammed default
   491   300006                     	org	3145734
   492   300006  80                 	db	128
   493                           
   494                           ; Padding undefined space
   495   300007                     	org	3145735
   496   300007  FF                 	db	255
   497                           
   498                           ;Config register CONFIG5L @ 0x300008
   499                           ;	Code Protection bit
   500                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   501                           ;	Code Protection bit
   502                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   503                           ;	Code Protection bit
   504                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   505                           ;	Code Protection bit
   506                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   507   300008                     	org	3145736
   508   300008  0F                 	db	15
   509                           
   510                           ;Config register CONFIG5H @ 0x300009
   511                           ;	Boot Block Code Protection bit
   512                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   513                           ;	Data EEPROM Code Protection bit
   514                           ;	CPD = OFF, Data EEPROM is not code-protected
   515   300009                     	org	3145737
   516   300009  C0                 	db	192
   517                           
   518                           ;Config register CONFIG6L @ 0x30000A
   519                           ;	Write Protection bit
   520                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   521                           ;	Write Protection bit
   522                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   523                           ;	Write Protection bit
   524                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   525                           ;	Write Protection bit
   526                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   527   30000A                     	org	3145738
   528   30000A  0F                 	db	15
   529                           
   530                           ;Config register CONFIG6H @ 0x30000B
   531                           ;	Configuration Register Write Protection bit
   532                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   533                           ;	Boot Block Write Protection bit
   534                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   535                           ;	Data EEPROM Write Protection bit
   536                           ;	WRTD = OFF, Data EEPROM is not write-protected
   537   30000B                     	org	3145739
   538   30000B  E0                 	db	224
   539                           
   540                           ;Config register CONFIG7L @ 0x30000C
   541                           ;	Table Read Protection bit
   542                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   543                           ;	Table Read Protection bit
   544                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   545                           ;	Table Read Protection bit
   546                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   547                           ;	Table Read Protection bit
   548                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   549   30000C                     	org	3145740
   550   30000C  0F                 	db	15
   551                           
   552                           ;Config register CONFIG7H @ 0x30000D
   553                           ;	Boot Block Table Read Protection bit
   554                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   555   30000D                     	org	3145741
   556   30000D  40                 	db	64
   557                           tosu	equ	0xFFF
   558                           tosh	equ	0xFFE
   559                           tosl	equ	0xFFD
   560                           stkptr	equ	0xFFC
   561                           pclatu	equ	0xFFB
   562                           pclath	equ	0xFFA
   563                           pcl	equ	0xFF9
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           prodh	equ	0xFF4
   569                           prodl	equ	0xFF3
   570                           indf0	equ	0xFEF
   571                           postinc0	equ	0xFEE
   572                           postdec0	equ	0xFED
   573                           preinc0	equ	0xFEC
   574                           plusw0	equ	0xFEB
   575                           fsr0h	equ	0xFEA
   576                           fsr0l	equ	0xFE9
   577                           wreg	equ	0xFE8
   578                           indf1	equ	0xFE7
   579                           postinc1	equ	0xFE6
   580                           postdec1	equ	0xFE5
   581                           preinc1	equ	0xFE4
   582                           plusw1	equ	0xFE3
   583                           fsr1h	equ	0xFE2
   584                           fsr1l	equ	0xFE1
   585                           bsr	equ	0xFE0
   586                           indf2	equ	0xFDF
   587                           postinc2	equ	0xFDE
   588                           postdec2	equ	0xFDD
   589                           preinc2	equ	0xFDC
   590                           plusw2	equ	0xFDB
   591                           fsr2h	equ	0xFDA
   592                           fsr2l	equ	0xFD9
   593                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SPI_Slave_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     120
                                              4 COMRAM     2     2      0
                             _SPI_Rx
                     _SPI_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       4     3      1     120
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Rx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Rx
   _SPI_Slave_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       7       1        7.4%
BITBIGSFRhhhh       36      0       0      21        0.0%
BITBIGSFRll         2C      0       0      26        0.0%
BITBIGSFRhhll       2B      0       0      24        0.0%
BITBIGSFRlh          5      0       0      25        0.0%
BITBIGSFRhhlh        4      0       0      23        0.0%
BITBIGSFRhhhl        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7       3        0.0%
DATA                 0      0       7       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Dec 17 15:48:23 2022

            _SSPSTATbits 000FC7                       l30 7FFE                       l25 7F96  
                     l26 7FF0                       l27 7F9E                       l36 7F3C  
                     l28 7FA6                       l29 7FAE                       u17 7F74  
                    l800 7F60                      l810 7FCA                      l802 7F66  
                    l804 7F6A                      l748 7F3A                      l790 7FFC  
                    l782 7F8A                      l786 7FB6                      l788 7FF2  
                    l796 7F4A                      l798 7F56                      wreg 000FE8  
                   _LATD 000F8C                     _dato 0007                     _main 7F4A  
         _SPI_Slave_Init 7F88                     start 0000             ___param_bank 000000  
                  ?_main 0001                    _TRISD 000F95   __end_of_SPI_Slave_Init 8000  
                  status 000FD8          __initialization 7F3E             __end_of_main 7F88  
                 ??_main 0005            __activetblptr 000002                   _ADCON1 000FC1  
        ?_SPI_Slave_Init 0001                   _SSPBUF 000FC9                   _SPI_Rx 7F3A  
                 isa$std 000001                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7F40            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?_SPI_Rx 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F3E                  __ramtop 0800                  __ptext0 7F4A  
                __ptext1 7F88                  __ptext2 7F3A         ??_SPI_Slave_Init 0002  
   end_of_initialization 7F40            __Lmediumconst 0000                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94           __end_of_SPI_Rx 7F3E  
    start_initialization 7F3E                 ??_SPI_Rx 0001              __pbssCOMRAM 0007  
               __Hrparam 0000                 __Lrparam 0000  SPI_Slave_Init@MS_CLK_SS 0004  
               isa$xinst 000000              _SSPCON1bits 000FC6      SPI_Slave_Init@Forma 0001  
