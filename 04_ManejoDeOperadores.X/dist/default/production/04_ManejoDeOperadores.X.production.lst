

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Sep 19 22:44:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _PORTA	set	3968
    52   000000                     _PORTB	set	3969
    53   000000                     _TRISA	set	3986
    54   000000                     _TRISD	set	3989
    55   000000                     _TRISB	set	3987
    56   000000                     _PORTD	set	3971
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   007D60                     __pcinit:
    62                           	callstack 0
    63   007D60                     start_initialization:
    64                           	callstack 0
    65   007D60                     __initialization:
    66                           	callstack 0
    67   007D60                     end_of_initialization:
    68                           	callstack 0
    69   007D60                     __end_of__initialization:
    70                           	callstack 0
    71   007D60  0E00               	movlw	low (__Lmediumconst shr (0+16))
    72   007D62  6EF8               	movwf	tblptru,c
    73   007D64  0100               	movlb	0
    74   007D66  EFB5  F03E         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMRAM
    77   000001                     __pcstackCOMRAM:
    78                           	callstack 0
    79   000001                     ??_deco_cc:
    80   000001                     ?___awdiv:
    81                           	callstack 0
    82   000001                     ?___awmod:
    83                           	callstack 0
    84   000001                     ___awdiv@dividend:
    85                           	callstack 0
    86   000001                     ___awmod@dividend:
    87                           	callstack 0
    88                           
    89                           ; 2 bytes @ 0x0
    90   000001                     	ds	2
    91   000003                     deco_cc@numero:
    92                           	callstack 0
    93   000003                     ___awdiv@divisor:
    94                           	callstack 0
    95   000003                     ___awmod@divisor:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x2
    99   000003                     	ds	1
   100   000004                     deco_cc@my_Deco:
   101                           	callstack 0
   102                           
   103                           ; 1 bytes @ 0x3
   104   000004                     	ds	1
   105   000005                     ___awdiv@counter:
   106                           	callstack 0
   107   000005                     ___awmod@counter:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0x4
   111   000005                     	ds	1
   112   000006                     ___awdiv@sign:
   113                           	callstack 0
   114   000006                     ___awmod@sign:
   115                           	callstack 0
   116                           
   117                           ; 1 bytes @ 0x5
   118   000006                     	ds	1
   119   000007                     ___awdiv@quotient:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x6
   123   000007                     	ds	2
   124   000009                     main@num1:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x8
   128   000009                     	ds	1
   129   00000A                     main@num2:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x9
   133   00000A                     	ds	1
   134   00000B                     main@resultado:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0xA
   138   00000B                     	ds	1
   139                           
   140 ;;
   141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   142 ;;
   143 ;; *************** function _main *****************
   144 ;; Defined at:
   145 ;;		line 6 in file "main.c"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;  i               2    0        int 
   150 ;;  resultado       1   10[COMRAM] unsigned char 
   151 ;;  num2            1    9[COMRAM] unsigned char 
   152 ;;  num1            1    8[COMRAM] unsigned char 
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, status,2, status,0, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   162 ;;      Params:         0       0       0       0       0       0       0       0       0
   163 ;;      Locals:         3       0       0       0       0       0       0       0       0
   164 ;;      Temps:          0       0       0       0       0       0       0       0       0
   165 ;;      Totals:         3       0       0       0       0       0       0       0       0
   166 ;;Total ram usage:        3 bytes
   167 ;; Hardware stack levels required when called: 1
   168 ;; This function calls:
   169 ;;		___awdiv
   170 ;;		___awmod
   171 ;;		_deco_cc
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text0
   178   007D6A                     __ptext0:
   179                           	callstack 0
   180   007D6A                     _main:
   181                           	callstack 30
   182   007D6A                     
   183                           ;main.c: 7:     TRISA = 0x00;
   184   007D6A  0E00               	movlw	0
   185   007D6C  6E92               	movwf	146,c	;volatile
   186   007D6E                     
   187                           ;main.c: 8:     TRISB = 0xff;
   188   007D6E  6893               	setf	147,c	;volatile
   189                           
   190                           ;main.c: 9:     TRISD = 0x00;
   191   007D70  0E00               	movlw	0
   192   007D72  6E95               	movwf	149,c	;volatile
   193   007D74                     l927:
   194                           
   195                           ;main.c: 19:         num1 = PORTB & 0b00001111;
   196   007D74  5081               	movf	129,w,c	;volatile
   197   007D76  0B0F               	andlw	15
   198   007D78  6E09               	movwf	main@num1^0,c
   199   007D7A                     
   200                           ;main.c: 20:         num2 = (PORTB & 0b11110000)>>4;
   201   007D7A  3881               	swapf	129,w,c	;volatile
   202   007D7C  0B0F               	andlw	15
   203   007D7E  0B0F               	andlw	15
   204   007D80  6E0A               	movwf	main@num2^0,c
   205   007D82                     
   206                           ;main.c: 21:         resultado = num1 + num2;
   207   007D82  5009               	movf	main@num1^0,w,c
   208   007D84  240A               	addwf	main@num2^0,w,c
   209   007D86  6E0B               	movwf	main@resultado^0,c
   210   007D88                     
   211                           ;main.c: 22:         PORTA = deco_cc(resultado / 10);
   212   007D88  C00B  F001         	movff	main@resultado,___awdiv@dividend
   213   007D8C  6A02               	clrf	(___awdiv@dividend+1)^0,c
   214   007D8E  0E00               	movlw	0
   215   007D90  6E04               	movwf	(___awdiv@divisor+1)^0,c
   216   007D92  0E0A               	movlw	10
   217   007D94  6E03               	movwf	___awdiv@divisor^0,c
   218   007D96  EC3A  F03F         	call	___awdiv	;wreg free
   219   007D9A  5001               	movf	?___awdiv^0,w,c
   220   007D9C  EC9C  F03F         	call	_deco_cc
   221   007DA0  6E80               	movwf	128,c	;volatile
   222   007DA2                     
   223                           ;main.c: 23:         PORTD = deco_cc(resultado % 10);
   224   007DA2  C00B  F001         	movff	main@resultado,___awmod@dividend
   225   007DA6  6A02               	clrf	(___awmod@dividend+1)^0,c
   226   007DA8  0E00               	movlw	0
   227   007DAA  6E04               	movwf	(___awmod@divisor+1)^0,c
   228   007DAC  0E0A               	movlw	10
   229   007DAE  6E03               	movwf	___awmod@divisor^0,c
   230   007DB0  ECE2  F03E         	call	___awmod	;wreg free
   231   007DB4  5001               	movf	?___awmod^0,w,c
   232   007DB6  EC9C  F03F         	call	_deco_cc
   233   007DBA  6E83               	movwf	131,c	;volatile
   234   007DBC  EFBA  F03E         	goto	l927
   235   007DC0  EF00  F000         	goto	start
   236   007DC4                     __end_of_main:
   237                           	callstack 0
   238                           
   239 ;; *************** function _deco_cc *****************
   240 ;; Defined at:
   241 ;;		line 7 in file "./deco_catodo.h"
   242 ;; Parameters:    Size  Location     Type
   243 ;;  numero          1    wreg     unsigned char 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  numero          1    2[COMRAM] unsigned char 
   246 ;;  my_Deco         1    3[COMRAM] unsigned char 
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      unsigned char 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   256 ;;      Params:         0       0       0       0       0       0       0       0       0
   257 ;;      Locals:         2       0       0       0       0       0       0       0       0
   258 ;;      Temps:          2       0       0       0       0       0       0       0       0
   259 ;;      Totals:         4       0       0       0       0       0       0       0       0
   260 ;;Total ram usage:        4 bytes
   261 ;; Hardware stack levels used: 1
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text1
   270   007F38                     __ptext1:
   271                           	callstack 0
   272   007F38                     _deco_cc:
   273                           	callstack 30
   274                           
   275                           ;incstack = 0
   276                           ;deco_cc@numero stored from wreg
   277   007F38  6E03               	movwf	deco_cc@numero^0,c
   278   007F3A                     
   279                           ;./deco_catodo.h: 8:     char my_Deco = 0;
   280   007F3A  0E00               	movlw	0
   281   007F3C  6E04               	movwf	deco_cc@my_Deco^0,c
   282                           
   283                           ;./deco_catodo.h: 10:     switch(numero){
   284   007F3E  EFC9  F03F         	goto	l735
   285   007F42                     l713:
   286   007F42  0E3F               	movlw	63
   287   007F44  6E04               	movwf	deco_cc@my_Deco^0,c
   288   007F46  EFFE  F03F         	goto	l737
   289   007F4A                     l715:
   290   007F4A  0E06               	movlw	6
   291   007F4C  6E04               	movwf	deco_cc@my_Deco^0,c
   292   007F4E  EFFE  F03F         	goto	l737
   293   007F52                     l717:
   294   007F52  0E5B               	movlw	91
   295   007F54  6E04               	movwf	deco_cc@my_Deco^0,c
   296   007F56  EFFE  F03F         	goto	l737
   297   007F5A                     l719:
   298   007F5A  0E4F               	movlw	79
   299   007F5C  6E04               	movwf	deco_cc@my_Deco^0,c
   300   007F5E  EFFE  F03F         	goto	l737
   301   007F62                     l721:
   302   007F62  0E66               	movlw	102
   303   007F64  6E04               	movwf	deco_cc@my_Deco^0,c
   304   007F66  EFFE  F03F         	goto	l737
   305   007F6A                     l723:
   306   007F6A  0E6D               	movlw	109
   307   007F6C  6E04               	movwf	deco_cc@my_Deco^0,c
   308   007F6E  EFFE  F03F         	goto	l737
   309   007F72                     l725:
   310   007F72  0E7D               	movlw	125
   311   007F74  6E04               	movwf	deco_cc@my_Deco^0,c
   312   007F76  EFFE  F03F         	goto	l737
   313   007F7A                     l727:
   314   007F7A  0E07               	movlw	7
   315   007F7C  6E04               	movwf	deco_cc@my_Deco^0,c
   316   007F7E  EFFE  F03F         	goto	l737
   317   007F82                     l729:
   318   007F82  0E7F               	movlw	127
   319   007F84  6E04               	movwf	deco_cc@my_Deco^0,c
   320   007F86  EFFE  F03F         	goto	l737
   321   007F8A                     l731:
   322   007F8A  0E6F               	movlw	111
   323   007F8C  6E04               	movwf	deco_cc@my_Deco^0,c
   324   007F8E  EFFE  F03F         	goto	l737
   325   007F92                     l735:
   326   007F92  5003               	movf	deco_cc@numero^0,w,c
   327   007F94  6E01               	movwf	??_deco_cc^0,c
   328   007F96  6A02               	clrf	(??_deco_cc+1)^0,c
   329                           
   330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   331                           ; Switch size 1, requested type "simple"
   332                           ; Number of cases is 1, Range of values is 0 to 0
   333                           ; switch strategies available:
   334                           ; Name         Instructions Cycles
   335                           ; simple_byte            4     3 (average)
   336                           ;	Chosen strategy is simple_byte
   337   007F98  5002               	movf	(??_deco_cc+1)^0,w,c
   338   007F9A  0A00               	xorlw	0	; case 0
   339   007F9C  B4D8               	btfsc	status,2,c
   340   007F9E  EFD3  F03F         	goto	l941
   341   007FA2  EFFE  F03F         	goto	l737
   342   007FA6                     l941:
   343                           
   344                           ; Switch size 1, requested type "simple"
   345                           ; Number of cases is 10, Range of values is 0 to 9
   346                           ; switch strategies available:
   347                           ; Name         Instructions Cycles
   348                           ; simple_byte           31    16 (average)
   349                           ;	Chosen strategy is simple_byte
   350   007FA6  5001               	movf	??_deco_cc^0,w,c
   351   007FA8  0A00               	xorlw	0	; case 0
   352   007FAA  B4D8               	btfsc	status,2,c
   353   007FAC  EFA1  F03F         	goto	l713
   354   007FB0  0A01               	xorlw	1	; case 1
   355   007FB2  B4D8               	btfsc	status,2,c
   356   007FB4  EFA5  F03F         	goto	l715
   357   007FB8  0A03               	xorlw	3	; case 2
   358   007FBA  B4D8               	btfsc	status,2,c
   359   007FBC  EFA9  F03F         	goto	l717
   360   007FC0  0A01               	xorlw	1	; case 3
   361   007FC2  B4D8               	btfsc	status,2,c
   362   007FC4  EFAD  F03F         	goto	l719
   363   007FC8  0A07               	xorlw	7	; case 4
   364   007FCA  B4D8               	btfsc	status,2,c
   365   007FCC  EFB1  F03F         	goto	l721
   366   007FD0  0A01               	xorlw	1	; case 5
   367   007FD2  B4D8               	btfsc	status,2,c
   368   007FD4  EFB5  F03F         	goto	l723
   369   007FD8  0A03               	xorlw	3	; case 6
   370   007FDA  B4D8               	btfsc	status,2,c
   371   007FDC  EFB9  F03F         	goto	l725
   372   007FE0  0A01               	xorlw	1	; case 7
   373   007FE2  B4D8               	btfsc	status,2,c
   374   007FE4  EFBD  F03F         	goto	l727
   375   007FE8  0A0F               	xorlw	15	; case 8
   376   007FEA  B4D8               	btfsc	status,2,c
   377   007FEC  EFC1  F03F         	goto	l729
   378   007FF0  0A01               	xorlw	1	; case 9
   379   007FF2  B4D8               	btfsc	status,2,c
   380   007FF4  EFC5  F03F         	goto	l731
   381   007FF8  EFFE  F03F         	goto	l737
   382   007FFC                     l737:
   383                           
   384                           ;./deco_catodo.h: 22:     return my_Deco;
   385   007FFC  5004               	movf	deco_cc@my_Deco^0,w,c
   386   007FFE  0012               	return		;funcret
   387   008000                     __end_of_deco_cc:
   388                           	callstack 0
   389                           
   390 ;; *************** function ___awmod *****************
   391 ;; Defined at:
   392 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  dividend        2    0[COMRAM] int 
   395 ;;  divisor         2    2[COMRAM] int 
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  sign            1    5[COMRAM] unsigned char 
   398 ;;  counter         1    4[COMRAM] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  2    0[COMRAM] int 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   408 ;;      Params:         4       0       0       0       0       0       0       0       0
   409 ;;      Locals:         2       0       0       0       0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0       0       0
   411 ;;      Totals:         6       0       0       0       0       0       0       0       0
   412 ;;Total ram usage:        6 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text2
   422   007DC4                     __ptext2:
   423                           	callstack 0
   424   007DC4                     ___awmod:
   425                           	callstack 30
   426   007DC4  0E00               	movlw	0
   427   007DC6  6E06               	movwf	___awmod@sign^0,c
   428   007DC8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   429   007DCA  EFEB  F03E         	goto	u190
   430   007DCE  EFE9  F03E         	goto	u191
   431   007DD2                     u191:
   432   007DD2  EFF1  F03E         	goto	l895
   433   007DD6                     u190:
   434   007DD6  6C01               	negf	___awmod@dividend^0,c
   435   007DD8  1E02               	comf	(___awmod@dividend+1)^0,f,c
   436   007DDA  B0D8               	btfsc	status,0,c
   437   007DDC  2A02               	incf	(___awmod@dividend+1)^0,f,c
   438   007DDE  0E01               	movlw	1
   439   007DE0  6E06               	movwf	___awmod@sign^0,c
   440   007DE2                     l895:
   441   007DE2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   442   007DE4  EFF8  F03E         	goto	u200
   443   007DE8  EFF6  F03E         	goto	u201
   444   007DEC                     u201:
   445   007DEC  EFFC  F03E         	goto	l899
   446   007DF0                     u200:
   447   007DF0  6C03               	negf	___awmod@divisor^0,c
   448   007DF2  1E04               	comf	(___awmod@divisor+1)^0,f,c
   449   007DF4  B0D8               	btfsc	status,0,c
   450   007DF6  2A04               	incf	(___awmod@divisor+1)^0,f,c
   451   007DF8                     l899:
   452   007DF8  5003               	movf	___awmod@divisor^0,w,c
   453   007DFA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   454   007DFC  B4D8               	btfsc	status,2,c
   455   007DFE  EF03  F03F         	goto	u211
   456   007E02  EF05  F03F         	goto	u210
   457   007E06                     u211:
   458   007E06  EF29  F03F         	goto	l915
   459   007E0A                     u210:
   460   007E0A  0E01               	movlw	1
   461   007E0C  6E05               	movwf	___awmod@counter^0,c
   462   007E0E  EF0D  F03F         	goto	l905
   463   007E12                     l903:
   464   007E12  90D8               	bcf	status,0,c
   465   007E14  3603               	rlcf	___awmod@divisor^0,f,c
   466   007E16  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   467   007E18  2A05               	incf	___awmod@counter^0,f,c
   468   007E1A                     l905:
   469   007E1A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   470   007E1C  EF12  F03F         	goto	u221
   471   007E20  EF14  F03F         	goto	u220
   472   007E24                     u221:
   473   007E24  EF09  F03F         	goto	l903
   474   007E28                     u220:
   475   007E28                     l907:
   476   007E28  5003               	movf	___awmod@divisor^0,w,c
   477   007E2A  5C01               	subwf	___awmod@dividend^0,w,c
   478   007E2C  5004               	movf	(___awmod@divisor+1)^0,w,c
   479   007E2E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   480   007E30  A0D8               	btfss	status,0,c
   481   007E32  EF1D  F03F         	goto	u231
   482   007E36  EF1F  F03F         	goto	u230
   483   007E3A                     u231:
   484   007E3A  EF23  F03F         	goto	l911
   485   007E3E                     u230:
   486   007E3E  5003               	movf	___awmod@divisor^0,w,c
   487   007E40  5E01               	subwf	___awmod@dividend^0,f,c
   488   007E42  5004               	movf	(___awmod@divisor+1)^0,w,c
   489   007E44  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   490   007E46                     l911:
   491   007E46  90D8               	bcf	status,0,c
   492   007E48  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   493   007E4A  3203               	rrcf	___awmod@divisor^0,f,c
   494   007E4C  2E05               	decfsz	___awmod@counter^0,f,c
   495   007E4E  EF14  F03F         	goto	l907
   496   007E52                     l915:
   497   007E52  5006               	movf	___awmod@sign^0,w,c
   498   007E54  B4D8               	btfsc	status,2,c
   499   007E56  EF2F  F03F         	goto	u241
   500   007E5A  EF31  F03F         	goto	u240
   501   007E5E                     u241:
   502   007E5E  EF35  F03F         	goto	l919
   503   007E62                     u240:
   504   007E62  6C01               	negf	___awmod@dividend^0,c
   505   007E64  1E02               	comf	(___awmod@dividend+1)^0,f,c
   506   007E66  B0D8               	btfsc	status,0,c
   507   007E68  2A02               	incf	(___awmod@dividend+1)^0,f,c
   508   007E6A                     l919:
   509   007E6A  C001  F001         	movff	___awmod@dividend,?___awmod
   510   007E6E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   511   007E72  0012               	return		;funcret
   512   007E74                     __end_of___awmod:
   513                           	callstack 0
   514                           
   515 ;; *************** function ___awdiv *****************
   516 ;; Defined at:
   517 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  dividend        2    0[COMRAM] int 
   520 ;;  divisor         2    2[COMRAM] int 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  quotient        2    6[COMRAM] int 
   523 ;;  sign            1    5[COMRAM] unsigned char 
   524 ;;  counter         1    4[COMRAM] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  2    0[COMRAM] int 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   534 ;;      Params:         4       0       0       0       0       0       0       0       0
   535 ;;      Locals:         4       0       0       0       0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0
   537 ;;      Totals:         8       0       0       0       0       0       0       0       0
   538 ;;Total ram usage:        8 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text3
   548   007E74                     __ptext3:
   549                           	callstack 0
   550   007E74                     ___awdiv:
   551                           	callstack 30
   552   007E74  0E00               	movlw	0
   553   007E76  6E06               	movwf	___awdiv@sign^0,c
   554   007E78  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   555   007E7A  EF43  F03F         	goto	u130
   556   007E7E  EF41  F03F         	goto	u131
   557   007E82                     u131:
   558   007E82  EF49  F03F         	goto	l851
   559   007E86                     u130:
   560   007E86  6C03               	negf	___awdiv@divisor^0,c
   561   007E88  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   562   007E8A  B0D8               	btfsc	status,0,c
   563   007E8C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   564   007E8E  0E01               	movlw	1
   565   007E90  6E06               	movwf	___awdiv@sign^0,c
   566   007E92                     l851:
   567   007E92  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   568   007E94  EF50  F03F         	goto	u140
   569   007E98  EF4E  F03F         	goto	u141
   570   007E9C                     u141:
   571   007E9C  EF56  F03F         	goto	l857
   572   007EA0                     u140:
   573   007EA0  6C01               	negf	___awdiv@dividend^0,c
   574   007EA2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   575   007EA4  B0D8               	btfsc	status,0,c
   576   007EA6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   577   007EA8  0E01               	movlw	1
   578   007EAA  1A06               	xorwf	___awdiv@sign^0,f,c
   579   007EAC                     l857:
   580   007EAC  0E00               	movlw	0
   581   007EAE  6E08               	movwf	(___awdiv@quotient+1)^0,c
   582   007EB0  0E00               	movlw	0
   583   007EB2  6E07               	movwf	___awdiv@quotient^0,c
   584   007EB4  5003               	movf	___awdiv@divisor^0,w,c
   585   007EB6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   586   007EB8  B4D8               	btfsc	status,2,c
   587   007EBA  EF61  F03F         	goto	u151
   588   007EBE  EF63  F03F         	goto	u150
   589   007EC2                     u151:
   590   007EC2  EF8B  F03F         	goto	l879
   591   007EC6                     u150:
   592   007EC6  0E01               	movlw	1
   593   007EC8  6E05               	movwf	___awdiv@counter^0,c
   594   007ECA  EF6B  F03F         	goto	l865
   595   007ECE                     l863:
   596   007ECE  90D8               	bcf	status,0,c
   597   007ED0  3603               	rlcf	___awdiv@divisor^0,f,c
   598   007ED2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   599   007ED4  2A05               	incf	___awdiv@counter^0,f,c
   600   007ED6                     l865:
   601   007ED6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   602   007ED8  EF70  F03F         	goto	u161
   603   007EDC  EF72  F03F         	goto	u160
   604   007EE0                     u161:
   605   007EE0  EF67  F03F         	goto	l863
   606   007EE4                     u160:
   607   007EE4                     l867:
   608   007EE4  90D8               	bcf	status,0,c
   609   007EE6  3607               	rlcf	___awdiv@quotient^0,f,c
   610   007EE8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   611   007EEA  5003               	movf	___awdiv@divisor^0,w,c
   612   007EEC  5C01               	subwf	___awdiv@dividend^0,w,c
   613   007EEE  5004               	movf	(___awdiv@divisor+1)^0,w,c
   614   007EF0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   615   007EF2  A0D8               	btfss	status,0,c
   616   007EF4  EF7E  F03F         	goto	u171
   617   007EF8  EF80  F03F         	goto	u170
   618   007EFC                     u171:
   619   007EFC  EF85  F03F         	goto	l875
   620   007F00                     u170:
   621   007F00  5003               	movf	___awdiv@divisor^0,w,c
   622   007F02  5E01               	subwf	___awdiv@dividend^0,f,c
   623   007F04  5004               	movf	(___awdiv@divisor+1)^0,w,c
   624   007F06  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   625   007F08  8007               	bsf	___awdiv@quotient^0,0,c
   626   007F0A                     l875:
   627   007F0A  90D8               	bcf	status,0,c
   628   007F0C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   629   007F0E  3203               	rrcf	___awdiv@divisor^0,f,c
   630   007F10  2E05               	decfsz	___awdiv@counter^0,f,c
   631   007F12  EF72  F03F         	goto	l867
   632   007F16                     l879:
   633   007F16  5006               	movf	___awdiv@sign^0,w,c
   634   007F18  B4D8               	btfsc	status,2,c
   635   007F1A  EF91  F03F         	goto	u181
   636   007F1E  EF93  F03F         	goto	u180
   637   007F22                     u181:
   638   007F22  EF97  F03F         	goto	l883
   639   007F26                     u180:
   640   007F26  6C07               	negf	___awdiv@quotient^0,c
   641   007F28  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   642   007F2A  B0D8               	btfsc	status,0,c
   643   007F2C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   644   007F2E                     l883:
   645   007F2E  C007  F001         	movff	___awdiv@quotient,?___awdiv
   646   007F32  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   647   007F36  0012               	return		;funcret
   648   007F38                     __end_of___awdiv:
   649                           	callstack 0
   650   000000                     
   651                           	psect	rparam
   652   000000                     
   653                           	psect	idloc
   654                           
   655                           ;Config register IDLOC0 @ 0x200000
   656                           ;	unspecified, using default values
   657   200000                     	org	2097152
   658   200000  FF                 	db	255
   659                           
   660                           ;Config register IDLOC1 @ 0x200001
   661                           ;	unspecified, using default values
   662   200001                     	org	2097153
   663   200001  FF                 	db	255
   664                           
   665                           ;Config register IDLOC2 @ 0x200002
   666                           ;	unspecified, using default values
   667   200002                     	org	2097154
   668   200002  FF                 	db	255
   669                           
   670                           ;Config register IDLOC3 @ 0x200003
   671                           ;	unspecified, using default values
   672   200003                     	org	2097155
   673   200003  FF                 	db	255
   674                           
   675                           ;Config register IDLOC4 @ 0x200004
   676                           ;	unspecified, using default values
   677   200004                     	org	2097156
   678   200004  FF                 	db	255
   679                           
   680                           ;Config register IDLOC5 @ 0x200005
   681                           ;	unspecified, using default values
   682   200005                     	org	2097157
   683   200005  FF                 	db	255
   684                           
   685                           ;Config register IDLOC6 @ 0x200006
   686                           ;	unspecified, using default values
   687   200006                     	org	2097158
   688   200006  FF                 	db	255
   689                           
   690                           ;Config register IDLOC7 @ 0x200007
   691                           ;	unspecified, using default values
   692   200007                     	org	2097159
   693   200007  FF                 	db	255
   694                           
   695                           	psect	config
   696                           
   697                           ;Config register CONFIG1L @ 0x300000
   698                           ;	PLL Prescaler Selection bits
   699                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   700                           ;	System Clock Postscaler Selection bits
   701                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   702                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   703                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   704   300000                     	org	3145728
   705   300000  00                 	db	0
   706                           
   707                           ;Config register CONFIG1H @ 0x300001
   708                           ;	Oscillator Selection bits
   709                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   710                           ;	Fail-Safe Clock Monitor Enable bit
   711                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   712                           ;	Internal/External Oscillator Switchover bit
   713                           ;	IESO = OFF, Oscillator Switchover mode disabled
   714   300001                     	org	3145729
   715   300001  08                 	db	8
   716                           
   717                           ;Config register CONFIG2L @ 0x300002
   718                           ;	Power-up Timer Enable bit
   719                           ;	PWRT = OFF, PWRT disabled
   720                           ;	Brown-out Reset Enable bits
   721                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   722                           ;	Brown-out Reset Voltage bits
   723                           ;	BORV = 3, Minimum setting 2.05V
   724                           ;	USB Voltage Regulator Enable bit
   725                           ;	VREGEN = OFF, USB voltage regulator disabled
   726   300002                     	org	3145730
   727   300002  19                 	db	25
   728                           
   729                           ;Config register CONFIG2H @ 0x300003
   730                           ;	Watchdog Timer Enable bit
   731                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   732                           ;	Watchdog Timer Postscale Select bits
   733                           ;	WDTPS = 32768, 1:32768
   734   300003                     	org	3145731
   735   300003  1E                 	db	30
   736                           
   737                           ; Padding undefined space
   738   300004                     	org	3145732
   739   300004  FF                 	db	255
   740                           
   741                           ;Config register CONFIG3H @ 0x300005
   742                           ;	CCP2 MUX bit
   743                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   744                           ;	PORTB A/D Enable bit
   745                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   746                           ;	Low-Power Timer 1 Oscillator Enable bit
   747                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   748                           ;	MCLR Pin Enable bit
   749                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   750   300005                     	org	3145733
   751   300005  81                 	db	129
   752                           
   753                           ;Config register CONFIG4L @ 0x300006
   754                           ;	Stack Full/Underflow Reset Enable bit
   755                           ;	STVREN = ON, Stack full/underflow will cause Reset
   756                           ;	Single-Supply ICSP Enable bit
   757                           ;	LVP = ON, Single-Supply ICSP enabled
   758                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   759                           ;	ICPRT = OFF, ICPORT disabled
   760                           ;	Extended Instruction Set Enable bit
   761                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   762                           ;	Background Debugger Enable bit
   763                           ;	DEBUG = 0x1, unprogrammed default
   764   300006                     	org	3145734
   765   300006  85                 	db	133
   766                           
   767                           ; Padding undefined space
   768   300007                     	org	3145735
   769   300007  FF                 	db	255
   770                           
   771                           ;Config register CONFIG5L @ 0x300008
   772                           ;	Code Protection bit
   773                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   774                           ;	Code Protection bit
   775                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   776                           ;	Code Protection bit
   777                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   778                           ;	Code Protection bit
   779                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   780   300008                     	org	3145736
   781   300008  0F                 	db	15
   782                           
   783                           ;Config register CONFIG5H @ 0x300009
   784                           ;	Boot Block Code Protection bit
   785                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   786                           ;	Data EEPROM Code Protection bit
   787                           ;	CPD = OFF, Data EEPROM is not code-protected
   788   300009                     	org	3145737
   789   300009  C0                 	db	192
   790                           
   791                           ;Config register CONFIG6L @ 0x30000A
   792                           ;	Write Protection bit
   793                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   794                           ;	Write Protection bit
   795                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   796                           ;	Write Protection bit
   797                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   798                           ;	Write Protection bit
   799                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   800   30000A                     	org	3145738
   801   30000A  0F                 	db	15
   802                           
   803                           ;Config register CONFIG6H @ 0x30000B
   804                           ;	Configuration Register Write Protection bit
   805                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   806                           ;	Boot Block Write Protection bit
   807                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   808                           ;	Data EEPROM Write Protection bit
   809                           ;	WRTD = OFF, Data EEPROM is not write-protected
   810   30000B                     	org	3145739
   811   30000B  E0                 	db	224
   812                           
   813                           ;Config register CONFIG7L @ 0x30000C
   814                           ;	Table Read Protection bit
   815                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   816                           ;	Table Read Protection bit
   817                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   818                           ;	Table Read Protection bit
   819                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   820                           ;	Table Read Protection bit
   821                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   822   30000C                     	org	3145740
   823   30000C  0F                 	db	15
   824                           
   825                           ;Config register CONFIG7H @ 0x30000D
   826                           ;	Boot Block Table Read Protection bit
   827                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   828   30000D                     	org	3145741
   829   30000D  40                 	db	64
   830                           tosu	equ	0xFFF
   831                           tosh	equ	0xFFE
   832                           tosl	equ	0xFFD
   833                           stkptr	equ	0xFFC
   834                           pclatu	equ	0xFFB
   835                           pclath	equ	0xFFA
   836                           pcl	equ	0xFF9
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           prodh	equ	0xFF4
   842                           prodl	equ	0xFF3
   843                           indf0	equ	0xFEF
   844                           postinc0	equ	0xFEE
   845                           postdec0	equ	0xFED
   846                           preinc0	equ	0xFEC
   847                           plusw0	equ	0xFEB
   848                           fsr0h	equ	0xFEA
   849                           fsr0l	equ	0xFE9
   850                           wreg	equ	0xFE8
   851                           indf1	equ	0xFE7
   852                           postinc1	equ	0xFE6
   853                           postdec1	equ	0xFE5
   854                           preinc1	equ	0xFE4
   855                           plusw1	equ	0xFE3
   856                           fsr1h	equ	0xFE2
   857                           fsr1l	equ	0xFE1
   858                           bsr	equ	0xFE0
   859                           indf2	equ	0xFDF
   860                           postinc2	equ	0xFDE
   861                           postdec2	equ	0xFDD
   862                           preinc2	equ	0xFDC
   863                           plusw2	equ	0xFDB
   864                           fsr2h	equ	0xFDA
   865                           fsr2l	equ	0xFD9
   866                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1021
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                            _deco_cc
 ---------------------------------------------------------------------------------
 (1) _deco_cc                                              4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _deco_cc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhh         6A      0       0      21        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BITBIGSFRlhh         E      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      24        0.0%
BITBIGSFRll         20      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Sep 19 22:44:54 2022

                     l27 7FFE             ___awdiv@sign 0006                      l282 7E72  
                    l269 7F36                      l711 7F3A                      l721 7F62  
                    l713 7F42                      l731 7F8A                      l723 7F6A  
                    l715 7F4A                      l901 7E0A                      l725 7F72  
                    l717 7F52                      l911 7E46                      l903 7E12  
                    l727 7F7A                      l719 7F5A                      l735 7F92  
                    l913 7E4C                      l905 7E1A                      l729 7F82  
                    l737 7FFC                      l851 7E92                      l843 7E74  
                    l907 7E28                      l915 7E52                      l931 7D82  
                    l923 7D6A                      l861 7EC6                      l853 7EA0  
                    l845 7E78                      l917 7E62                      l909 7E3E  
                    l941 7FA6                      l933 7D88                      l925 7D6E  
                    l871 7F00                      l863 7ECE                      l855 7EA8  
                    l847 7E86                      l919 7E6A                      l935 7DA2  
                    l927 7D74                      l881 7F26                      l873 7F08  
                    l865 7ED6                      l857 7EAC                      l849 7E8E  
                    l929 7D7A                      l883 7F2E                      l875 7F0A  
                    l867 7EE4                      l859 7EB4                      l891 7DD6  
                    l877 7F10                      l869 7EEA                      l893 7DDE  
                    l879 7F16                      l895 7DE2                      l887 7DC4  
                    l897 7DF0                      l889 7DC8                      l899 7DF8  
                    u200 7DF0                      u201 7DEC                      u130 7E86  
                    u210 7E0A                      u131 7E82                      u211 7E06  
                    u140 7EA0                      u220 7E28                      u141 7E9C  
                    u221 7E24                      u150 7EC6                      u230 7E3E  
                    u151 7EC2                      u231 7E3A                      u160 7EE4  
                    u240 7E62                      u161 7EE0                      u241 7E5E  
                    u170 7F00                      u171 7EFC                      u180 7F26  
                    u181 7F22                      u190 7DD6                      u191 7DD2  
           ___awmod@sign 0006                     _main 7D6A                     start 0000  
           ___param_bank 000000                    ?_main 0001          __end_of___awdiv 7F38  
        __end_of___awmod 7E74          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
        __end_of_deco_cc 8000                    status 000FD8          __initialization 7D60  
           __end_of_main 7DC4                   ??_main 0009            __activetblptr 000002  
       ___awdiv@dividend 0001                ??___awdiv 0005                ??___awmod 0005  
              ??_deco_cc 0001         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005            main@resultado 000B  
          deco_cc@numero 0003                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7D60            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7E74  
                ___awmod 7DC4                  _deco_cc 7F38                  __pcinit 7D60  
                __ramtop 0800                  __ptext0 7D6A                  __ptext1 7F38  
                __ptext2 7DC4                  __ptext3 7E74         ___awmod@dividend 0001  
   end_of_initialization 7D60           deco_cc@my_Deco 0004            __Lmediumconst 0000  
    start_initialization 7D60                 ?___awdiv 0001                 ?___awmod 0001  
               ?_deco_cc 0001                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000                 main@num1 0009                 main@num2 000A  
